FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# Synergic Mobility Service Management System
Service Management System for Synergic Mobility


# Status Code List

<table>
    <tr><th>code</th><th>model / act</th><th>Description</th></tr>
    <tr><td>0</td><td>ALL</td><td>Successed</td></tr>
    <tr><td>-1</td><td>login</td><td>Username is not exists</td></tr>
    <tr><td>-2</td><td>login</td><td>Password is wrong</td></tr>
    <tr><td>-3</td><td>login</td><td>User is not active</td></tr>
    <tr><td>-4</td><td>register</td><td>Username is already exists</td></tr>
    <tr><td>-5</td><td>register</td><td>Password is too weak</td></tr>
    <tr><td>-6</td><td>register</td><td>Username is Null</td></tr>
    <tr><td>-7</td><td>register</td><td>Password is Null</td></tr>
    <tr><td>-8</td><td>register</td><td>The user group does not allow registration</td></tr>
    <tr><td>-9</td><td>ALL</td><td>Token is wrong or expired</td></tr>
    <tr><td>-10</td><td>ALL</td><td>User is not logging in</td></tr>
    <tr><td>-11</td><td>ALL</td><td>No permission for this operation</td></tr>
    <tr><td>-12</td><td>ALL</td><td>Token is wrong</td></tr>
    <tr><td>-13</td><td>ALL</td><td>Sys Error</td></tr>
    <tr><td>-14</td><td>demand</td><td>demand_id is not exists</td></tr>
    <tr><td>-15</td><td>demand</td><td>it is not your demand</td></tr>
    <tr><td>-16</td><td>demand</td><td>the demand is alread finished</td></tr>
    <tr><td>-17</td><td>demand</td><td>the demand is alread canceled</td></tr>
<table/>

# Vehicle Status Code List

<table>
    <tr><th>code</th><th>Status</th><th>Description</th></tr>
    <tr><td>0</td><td>PATROL</td><td>巡回</td></tr>
    <tr><td>1</td><td>COMING</td><td>迎車</td></tr>
    <tr><td>2</td><td>WAITING</td><td>待ち</td></tr>
    <tr><td>3</td><td>GOING</td><td>賃走</td></tr>
    <tr><td>4</td><td>ARRIVING</td><td>到着</td></tr>
<table/>

# Demand Status Code List

<table>
    <tr><th>code</th><th>Status</th><th>Description</th></tr>
    <tr><td>0</td><td>CREATE</td><td></td></tr>
    <tr><td>1</td><td>USER_CANCEL</td><td></td></tr>
    <tr><td>2</td><td>FLEET_CANCEL</td><td></td></tr>
    <tr><td>3</td><td>OPERATING</td><td></td></tr>
    <tr><td>4</td><td>FINISH</td><td></td></tr>
<table/>

# Passenger Type List

<table>
    <tr><th>Passenger Type</th><th>Description</th></tr>
    <tr><td>adult</td><td></td></tr>
    <tr><td>child</td><td></td></tr>
<table/>

# Service Type List

<table>
    <tr><th>Service Type</th><th>Description</th></tr>
    <tr><td>share-ride</td><td>Allow share a car with others</td></tr>
    <tr><td>private-ride</td><td>Express</td></tr>
    <tr><td>movie</td><td>PATROL</td></tr>
<table/>


# Group client->sms

## SIO Login [/io/login]
### User Login (Get Token) [PUT]
+ Request (json)

        {
            username:"meida",
            password:"password"
        }
        
+ Response 0

        {
            code:0,
            results:{
                token:"uO9DBKWbMiLYvCW90gb8hp5FU22W9a7W"
            }
        }


## SIO Built Demand [/io/createdemand]
Generate a demand_id when client send a request to sms.
Then it will be sent to fleet.
### Built Demand (Call A Car) [PUT]

+ Request (json)

        {
            token:"uO9DBKWbMiLYvCW90gb8hp5FU22W9a7W",
            from:{lat: 34.859583, lon: 137.164640},
            to:{lat: 34.859091, lon: 137.172021},
            passengers:[{type:"adult"}],
            services:[{type:"share-ride"},{type:"movie"}] //private-ride
        }
        
+ Response 0

        {
            code:0,
            results:{
                demand_id:1 //important
            }
        }


## SIO Cancel Demand [/io/canceldemand]
### Cancel Demand [PUT]

+ Request (json)

        {
            token:"uO9DBKWbMiLYvCW90gb8hp5FU22W9a7W",
            demand_id:1
        }
        
+ Response 0

        {
            code:0,
            results:{
                demand_id:1
            }
        }

## SIO Change Demand Route [/io/changedemandroute]
Change Demand Route includes go another place and debus.
If debus, just send the current location.

### Change Demand Route [PUT]

+ Request (json)

        {
            token:"uO9DBKWbMiLYvCW90gb8hp5FU22W9a7W",
            demand_id:1,
            to:{lat: 34.741091, lon: 137.251021}
        }
        
+ Response 0

        {
            code:0,
            results:{
                demand_id:1
            }
        }
        
        
        
        
        
        
        
        
        
        
        
        
        
# Group sms->fleet


## SIO Built Demand [/fleet/io/createdemand]
### Built Demand to Fleet [PUT]

+ Request (json)

        {
            token:"uO9DBKWbMiLYvCW90gb8hp5FU22W9a7W",
            from:{lat: 34.859583, lon: 137.164640},
            to:{lat: 34.859091, lon: 137.172021},
            passengers:[{type:"adult"}],
            services:[{type:"share-ride"},{type:"movie"}], //private-ride
            demand_id:1
        }
        
+ Response 0

        {
            code:0,
            results:{
                vehicle_id:1,
                demand_id:1
            }
        }
        
        
## SIO Cancel Demand [/fleet/io/canceldemand]
### Cancel Demand [PUT]

+ Request (json)

        {
            demand_id:1
        }
        
+ Response 0

        {
            code:0,
            results:{
            }
        }
        
## SIO Depart [/sms/io/depart]
When vehicle is waiting status, phone send depart to SMS and Fleet

### Depart [PUT]

+ Request (json)

        {
            demand_id:1
        }
        
+ Response 0

        {
            code:0,
            results:{
            }
        }
    

## SIO Change Demand Route [/fleet/io/changedemandroute]
Change Demand Route includes go another place and debus.
If debus, just send the current location.

### Change Demand Route [PUT]

+ Request (json)

        {
            demand_id:1,
            to:{lat: 34.741091, lon: 137.251021},
        }
        
+ Response 0

        {
            code:0,
            results:{
                demand_id:1
            }
        }

# Group fleet->sms

## SIO Viecle Status [/io/viecle_status]
Monitor viecles in SMS, and send viecle status to client

### Viecle Status [PUT]
+ Request (json)

        {
            
            "vehicles": [
                {
                    "vehicle_id": 1,
                    "plate": "名古屋021あ021",
                    "lat": 34.887179350000004, //current lat
                    "lon": 137.17469457500002, //current lon
                    "speed": 8, // m/s
                    "status": 0, //see vehcle status codes
                    "orientation": 0.6651332923552786,
                    "description": "黄色プリウスα",
                    "demand_ids":[],
                    "route":[] //dont show route when patrol (status == 0)
                },
                {
                    "vehicle_id": 2,
                    "plate": "名古屋001あ001",
                    "lat": 34.89015292727274,
                    "lon": 137.17468727272725,
                    "speed": 8,
                    "status": 1, //noteiced: not patrol here so demand_ids exists
                    "orientation": 342.308506993808,
                    "description": "赤いプリウスα",
                    "demand_ids":[1], //what demends are taking now
                    "route":[
                        [lat, lon, status_code],
                        [lat, lon, status_code],
                        [lat, lon, status_code]
                    ] //send route with status_code
                }
            ]
        }
        
+ Response 0

        {
            None
        }
  
        
        
# Group fleet->client

## SIO Viecle Status [/client/io/viecle_status]
Monitor viecles in SMS, and send viecle status to client

### Viecle Status [PUT]
+ Request (json)

        {
            
            "vehicles": [
                {
                    "vehicle_id": 1,
                    "plate": "名古屋021あ021",
                    "lat": 34.887179350000004, //current lat
                    "lon": 137.17469457500002, //current lon
                    "speed": 8, // m/s
                    "status": 0, //see vehcle status codes
                    "orientation": 0.6651332923552786,
                    "description": "黄色プリウスα",
                    "demand_ids":[],
                    "route":[] //dont show route when patrol (status == 0)
                },
                {
                    "vehicle_id": 2,
                    "plate": "名古屋001あ001",
                    "lat": 34.89015292727274,
                    "lon": 137.17468727272725,
                    "speed": 8,
                    "status": 1, //noteiced: not patrol here so demand_ids exists
                    "orientation": 342.308506993808,
                    "description": "赤いプリウスα",
                    "demand_ids":[1], //what demends are taking now
                    "route":[
                        [lat, lon, status_code],
                        [lat, lon, status_code],
                        [lat, lon, status_code]
                    ] //send route with status_code
                }
            ]
        }
        
+ Response 0
        
        {
            None
        }