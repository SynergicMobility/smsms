FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# Synergic Mobility Service Management System
Service Management System for Synergic Mobility


# Status Code List

<table>
    <tr><th>code</th><th>model / act</th><th>Description</th></tr>
    <tr><td>0</td><td>ALL</td><td>Successed</td></tr>
    <tr><td>-1</td><td>login</td><td>Username is not exists</td></tr>
    <tr><td>-2</td><td>login</td><td>Password is wrong</td></tr>
    <tr><td>-3</td><td>login</td><td>User is not active</td></tr>
    <tr><td>-4</td><td>register</td><td>Username is already exists</td></tr>
    <tr><td>-5</td><td>register</td><td>Password is too weak</td></tr>
    <tr><td>-6</td><td>register</td><td>Username is Null</td></tr>
    <tr><td>-7</td><td>register</td><td>Password is Null</td></tr>
    <tr><td>-8</td><td>register</td><td>The user group does not allow registration</td></tr>
    <tr><td>-9</td><td>ALL</td><td>Token is wrong or expired</td></tr>
    <tr><td>-10</td><td>ALL</td><td>User is not logging in</td></tr>
    <tr><td>-11</td><td>ALL</td><td>No permission for this operation</td></tr>
<table/>

# Vehicle Status Code List

<table>
    <tr><th>code</th><th>Status</th><th>Description</th></tr>
    <tr><td>0</td><td>PATROL</td><td>巡回</td></tr>
    <tr><td>1</td><td>COMING</td><td>迎車</td></tr>
    <tr><td>2</td><td>WAITING</td><td>待ち</td></tr>
    <tr><td>3</td><td>GOING</td><td>賃走</td></tr>
    <tr><td>4</td><td>ARRIVING</td><td>到着</td></tr>
<table/>

## login client->sms [/sms/io/login]
### User Login (Get Token) [PUT]
+ Request (json)

        {
            username:"meida",
            password:"password"
        }
        
+ Response 0

        {
            code:0,
            act:"login",
            results:{
                token:"uO9DBKWbMiLYvCW90gb8hp5FU22W9a7W"
            }
        }


## SIO Built Demand client->sms [/sms/io/builtdemand]
Generate a demand_id when client send a request to sms.
Then it will be sent to fleet.
### Built Demand (Call A Car) [PUT]

+ Request (json)

        {
            token:"uO9DBKWbMiLYvCW90gb8hp5FU22W9a7W",
            from:{lat: 34.859583, lon: 137.164640},
            to:{lat: 34.859091, lon: 137.172021},
            passengers:[{type:"adult"}]
        }
        
+ Response 0

        {
            code:0,
            act:"builtdemand",
            results:{
                demand_id:1
            }
        }

## SIO Built Demand sms->fleet [/fleet/io/demand]
### Built Demand to Fleet [PUT]

+ Request (json)

        {
            key:"YvCW909DBKWbMigb8hp5uOLFU22W9a7W",
            demand_id:1,
            user_id:1,
            from:{lat: 34.859583, lon: 137.164640},
            to:{lat: 34.859091, lon: 137.172021},
            passengers:[{type:"adult"}]
        }
        
+ Response 0

        {
            code:0,
            act:"demand",
            results:{
                vehicle_id:1,
                user_id:1,
                demand_id:1
            }
        }
        
## SIO Cancel Demand client->sms [/sms/io/canceldemand]
### Cancel Demand [PUT]

+ Request (json)

        {
            token:"uO9DBKWbMiLYvCW90gb8hp5FU22W9a7W",
            demand_id:1
        }
        
+ Response 0

        {
            code:0,
            act:"canceldemand",
            results:{
                vehicle_id:1
            }
        }
        
## SIO Cancel Demand sms->fleet [/fleet/io/canceldemand]
### Cancel Demand [PUT]

+ Request (json)

        {
            key:"YvCW909DBKWbMigb8hp5uOLFU22W9a7W",
            demand_id:1
        }
        
+ Response 0

        {
            code:0,
            act:"canceldemand",
            results:{
                demand_id:1
            }
        }
        
## SIO Change Demand Route client->sms [/sms/io/changedemandroute]
Change Demand Route includes go another place and debus.
If debus, just send the current location.

### Change Demand Route [PUT]

+ Request (json)

        {
            token:"uO9DBKWbMiLYvCW90gb8hp5FU22W9a7W",
            demand_id:1,
            to:{lat: 34.741091, lon: 137.251021},
        }
        
+ Response 0

        {
            code:0,
            act:"changedemandroute",
            results:{
                demand_id:1
            }
        }

## SIO Change Demand Route sms->fleet [/fleet/io/changedemandroute]
Change Demand Route includes go another place and debus.
If debus, just send the current location.

### Change Demand Route [PUT]

+ Request (json)

        {
            token:"uO9DBKWbMiLYvCW90gb8hp5FU22W9a7W",
            demand_id:1,
            to:{lat: 34.741091, lon: 137.251021},
        }
        
+ Response 0

        {
            key:"YvCW909DBKWbMigb8hp5uOLFU22W9a7W",
            act:"changedemandroute",
            results:{
                demand_id:1
            }
        }


## SIO Viecle Status fleet->sms [/sms/io/viecle_status]
Monitor viecles in SMS

### Viecle Status [PUT]
+ Request (json)

        {
            "key":
            "vehicles": [
                {
                    "vehicle_id": 1,
                    "plate": "名古屋021あ021",
                    "lat": 34.887179350000004, //current lat
                    "lon": 137.17469457500002, //current lon
                    "speed": 8, // m/s
                    "status": 0, //see vehcle status codes
                    "orientation": 0.6651332923552786,
                    "description": "黄色プリウスα",
                    "demand_ids":[]
                },
                {
                    "vehicle_id": 2,
                    "plate": "名古屋001あ001",
                    "lat": 34.89015292727274,
                    "lon": 137.17468727272725,
                    "speed": 8,
                    "status": 1,
                    "orientation": 342.308506993808,
                    "description": "赤いプリウスα",
                    "demand_ids":[1] //what demends are taking now
                }
            ]
        }


































## The following is draft ! [/io]


Web socket has only one address(URL).
Everything in following popup.

### Web Socket [PUT]

+ Request Action: User Login (json)

        {
            act:"login", //required
            username:"username", //required
            password:"password", //required
            token_life:36000 //optional; default=36000; range=[0, 3600*12*30]; The lifecycle (second) of token
        }
        
+ Response 0

        {
            code:0,
            act:"login",
            results:{
                token:"uO9DBKWbMiLYvCW90gb8hp5FU22W9a7W",
                username:"username",
                firstname:"Tarou",
                lastname:"meidai",
                email:"tarou@synergicmobility.com",
                group:"person", //user group ["person", "company", "admin"]
                register_date:"2017-11-30",
                token_life:35991
            }
        }
        
+ Request Action: Token renew and update #optional (json)

        {
            act:"token_update",
            token:"uO9DBKWbMiLYvCW90gb8hp5FU22W9a7W"
            token_life:36000, //optional; default=36000; range=[0, 3600*12*30]; The lifecycle (second) of token
            is_update:false //is response a new token? default=False
        }

+ Response 0

        {
            code:0,
            act:"token_update",
            results:{
                token:"DdQJ3uz8MDwncPO9p7ATolgEvSzYFr0V",
                token_life:35991
            }
        }

+ Request Action: Register a new user

        {
            act:"register", //required
            username:"username", //required
            password:"password", //required
            firstname:"Tarou", //optional;
            lastname:"meidai", //optional;
            email:"tarou@synergicmobility.com", //optional;
            group:"person", //optional;
        }

+ Response 0

        {
            code:0,
            act:"register",
            results:{
                
            }
        }
        
+ Request Action: Change password
        
        {
            act:"changepassword", //required
            username:"username", //required
            password:"password", //required
            newpassword:"newpassword" // required
        }
        
+ Response 0

        {
            code:0,
            act:"changepassword",
            results:{
                
            }
        }

+ Request Action: Get viecle status once

        {
            act:"getvieclestatus", //required
        }

+ Response 0

        {
            "code": 0,
            "act": "vieclestatus",
            "results": {
                "viecles": [
                    {
                        "id": 1,
                        "plate": "名古屋021あ021",
                        "lat": 34.845131636363625,
                        "lon": 137.16038205454552,
                        "speed": 8.0,
                        "status": "empty",
                        "orientation": 84.30252574402982,
                        "description": "黄色プリウスα",
                        "route": {
                              "dep": {
                                "lat": 34.84498235454545,
                                "lon": 137.15869463636363
                              },
                              "des": {
                                "lat": 34.874715,
                                "lon": 137.158208
                              },
                              "distance": 4046.5607667015584,
                              "route": [
                                {
                                  "lat": 34.8450053,
                                  "lon": 137.159016,
                                  "distance": 0,
                                  "rate": 0.0
                                },
                                {
                                  "lat": 34.8450932,
                                  "lon": 137.1599968,
                                  "distance": 29.50193567961456,
                                  "rate": 0.007290619709057834
                                }
                              ]
                        }
                    }
                ]
            }
        }

+ Request Action: Start Pushing Viecle Status

        {
            act:"startpushingvieclestatus", //required
            interval:1 //push every [0.1, 5] seconds 
        }

+ Response 0

        {
            "code": 0,
            "act": "startpushingvieclestatus",
            "results": {
            }
        }

+ Request Action: Stop Pushing Viecle Status

        {
            act:"stoppushingvieclestatus" //required
        }
+ Response 0

        {
            "code": 0,
            "act": "stoppushingvieclestatus",
            "results": {
            }
        }

## Post Service Demand [/api/client/demands/add?token={token}]

### Add pick up human demand [POST]
+ Parameters
    + token (string) - User login token
+ Request (application/json)

        [
            {
                token:"DdQJ3uz8MDwncPO9p7ATolgEvSzYFr0V",
                service:
                {
                    user_id:1,
                    from:{
                        name:"幸田駅",
                        address:"愛知県額田郡幸田町大字芦谷字幸田 幸田駅",
                        lon:34.859583,
                        lat:137.164640,
                        time:"2017-12-02T12:01:03+09:00"
                    },
                    to:{
                        name:"安楽寺",くえｓ
                        address:"愛知県額田郡幸田町大字芦谷字東山26 安楽寺",
                        lon:34.859091,
                        lat:137.172021
                    },
                    passengers: [
                        {type:"adult"},
                        {type:"adult"},
                        {type:"child"}
                    ],
                    cargos:[
                        {size:"big", owner_user_id:1},
                        {size:"big", owner_user_id:1},
                        {size:"small", owner_user_id:1}
                    ],
                    services:["sharing", "remote_meeting", "movie"]
                }
            },
            {
                token:"DdQJ3uz8MDwncPO9p7ATolgEvSzYFr0V",
                service:
                {
                    needs_user_id:1,
                    from:{
                        name:"幸田駅",
                        address:"愛知県額田郡幸田町大字芦谷字幸田 幸田駅",
                        lon:34.859583,
                        lat:137.164640,
                        time:"2017-12-02T12:01:03+09:00"
                    },
                    to:{
                        name:"安楽寺",
                        address:"愛知県額田郡幸田町大字芦谷字東山26 安楽寺",
                        lon:34.859091,
                        lat:137.172021
                    },
                    passengers: [],
                    cargos:[
                        {size:"big", owner_user_id:3},
                        {size:"small", owner_user_id:3}
                    ],
                    funtions:["express"]
                }
            }
        ]

+ Response 201 (application/json)

        [
             {
                needs_user_id:1,
                needs_type:"passenger",
                needs_id:1324, //システムに生成された需要ID
                from:{
                    name:"幸田駅",
                    address:"愛知県額田郡幸田町大字芦谷字幸田 幸田駅",
                    lon:34.859583,
                    lat:137.164640,
                    time:"2017-12-02T12:01:03+09:00",
                    estimated_time:"2017-12-02T12:03:12+09:00" //予想発車時間
                },
                estimated_distance:1538, //予想距離メートル
                route:[　//スマホ地図表示用
                    {lon:34.5463583,lat:137.244540},
                    {lon:34.7578583,lat:137.356740}
                ],
                to:{
                    name:"安楽寺",
                    address:"愛知県額田郡幸田町大字芦谷字東山26 安楽寺",
                    lon:34.859091,
                    lat:137.172021,
                    estimated_time:"2017-12-02T12:46:27+09:00"　//予想到着時間
                },
                vehicle:{ //利用車両
                    vehicle_id:1,
                    model:"白いトヨタプリュス",
                    plate:"幸田001あ001",
                },
                passengers: [
                    {type:"adult"},
                    {type:"adult"},
                    {type:"child"}
                ],
                cargos:[
                    {size:"big", owner_user_id:1},
                    {size:"big", owner_user_id:1},
                    {size:"small", owner_user_id:1}
                ],
                prices:[　//予算値段
                    {type:"passager", price:4720},
                    {type:"freight", price:1200}
                ],
                funtions:["sharing", "remote_meeting", "movie"]
            }
        ]
    
## Get All Vehicles Status [/api/vehicle/getall?token={token}]
### Get All Vehicles Status [GET]
This API gets all vehicles status including id, plate, status(empty, service, park, inspection) and current coordinates and orientation.
Notice: speed is m/s, orientation is in [0, 360) accoroding to 0 for north, 90 for east, 180 for south, 270 for west.
+ Parameters
    + token (string) - User login token
+ Response 200 (application/json)

        {
            "code": 0,
            "results": {
                "viecles": [
                    {
                        "id": 1,
                        "plate": "名古屋021あ021",
                        "lat": 34.845131636363625,
                        "lon": 137.16038205454552,
                        "speed": 8.0,
                        "status": "empty",
                        "orientation": 84.30252574402982,
                        "description": "黄色プリウスα",
                        "route": {
                              "dep": {
                                "lat": 34.84498235454545,
                                "lon": 137.15869463636363
                              },
                              "des": {
                                "lat": 34.874715,
                                "lon": 137.158208
                              },
                              "distance": 4046.5607667015584,
                              "route": [
                                {
                                  "lat": 34.8450053,
                                  "lon": 137.159016,
                                  "distance": 0,
                                  "rate": 0.0
                                },
                                {
                                  "lat": 34.8450932,
                                  "lon": 137.1599968,
                                  "distance": 29.50193567961456,
                                  "rate": 0.007290619709057834
                                }
                              ]
                        }
                    }
                ]
            }
        }

## Get One Vehicles Status by Id [/api/vehicle/get?token={token}&id={id}]
### Get One Vehicles Status by Id [GET]
+ Parameters
    + token (string) - User login token
    + id (int) - viecle id
+ Response 200 (application/json)

        {
            "status": "OK",
            "results": {
                "viecle": {
                        "id": 1,
                        "plate": "名古屋021あ021",
                        "lat": 34.845131636363625,
                        "lon": 137.16038205454552,
                        "speed": 8.0,
                        "status": "empty",
                        "orientation": 84.30252574402982,
                        "description": "黄色プリウスα",
                        "route": {
                              "dep": {
                                "lat": 34.84498235454545,
                                "lon": 137.15869463636363
                              },
                              "des": {
                                "lat": 34.874715,
                                "lon": 137.158208
                              },
                              "distance": 4046.5607667015584,
                              "route": [
                                {
                                  "lat": 34.8450053,
                                  "lon": 137.159016,
                                  "distance": 0,
                                  "rate": 0.0
                                },
                                {
                                  "lat": 34.8450932,
                                  "lon": 137.1599968,
                                  "distance": 29.50193567961456,
                                  "rate": 0.007290619709057834
                                }
                              ]
                        }
                    }
            }
        }